---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logseer
  namespace: {{ .Release.Namespace }}
  labels:
    app: logseer
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: "logseer"
  template:
    metadata:
      creationTimestamp:
      labels:
        app: "logseer"
        component: logseer
        module: logseer
        version: v2.3.0
    spec:
      volumes:
        - name: log
        {{- if eq .Values.storage.log.type "hostpath" }}
          hostPath:
            path: {{ .Values.storage.log.hostpath.path }}
            type: DirectoryOrCreate
        {{- else if eq .Values.storage.log.type "emptydir" }}
          emptyDir:
            sizeLimit: {{ .Values.storage.log.emptydir.sizelimit }}
        {{- end }}
        - configMap:
            name: "logseer-config"
          name: "config-volume"
      containers:
        - name: app
          image: "{{ .Values.images.logseer_image }}"
          env:
           - name: GIN_MODE
             value: release
           - name: TZ
             value: Asia/Shanghai
          resources:
            limits:
              cpu: "{{ .Values.resources.logseer.limits.cpu }}"
              memory: "{{ .Values.resources.logseer.limits.memory }}"
            requests:
              cpu: "{{ .Values.resources.logseer.requests.cpu }}"
              memory: "{{ .Values.resources.logseer.requests.memory }}"
          volumeMounts:
            - name: "log"
              mountPath: "/opt/logseer/logs"
            - mountPath: "/opt/logseer/application.yml"
              name: "config-volume"
              subPath: "application.yml"
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: "File"
          imagePullPolicy: "IfNotPresent"
      restartPolicy: "Always"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "app"
                operator: "In"
                values:
                - "logseer"
            topologyKey: "kubernetes.io/hostname"
